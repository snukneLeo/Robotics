// Generated by gencpp from file elaboratoR1_B/Service.msg
// DO NOT EDIT!


#ifndef ELABORATOR1_B_MESSAGE_SERVICE_H
#define ELABORATOR1_B_MESSAGE_SERVICE_H

#include <ros/service_traits.h>


#include <elaboratoR1_B/ServiceRequest.h>
#include <elaboratoR1_B/ServiceResponse.h>


namespace elaboratoR1_B
{

struct Service
{

typedef ServiceRequest Request;
typedef ServiceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Service
} // namespace elaboratoR1_B


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::elaboratoR1_B::Service > {
  static const char* value()
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const ::elaboratoR1_B::Service&) { return value(); }
};

template<>
struct DataType< ::elaboratoR1_B::Service > {
  static const char* value()
  {
    return "elaboratoR1_B/Service";
  }

  static const char* value(const ::elaboratoR1_B::Service&) { return value(); }
};


// service_traits::MD5Sum< ::elaboratoR1_B::ServiceRequest> should match 
// service_traits::MD5Sum< ::elaboratoR1_B::Service > 
template<>
struct MD5Sum< ::elaboratoR1_B::ServiceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::elaboratoR1_B::Service >::value();
  }
  static const char* value(const ::elaboratoR1_B::ServiceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::elaboratoR1_B::ServiceRequest> should match 
// service_traits::DataType< ::elaboratoR1_B::Service > 
template<>
struct DataType< ::elaboratoR1_B::ServiceRequest>
{
  static const char* value()
  {
    return DataType< ::elaboratoR1_B::Service >::value();
  }
  static const char* value(const ::elaboratoR1_B::ServiceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::elaboratoR1_B::ServiceResponse> should match 
// service_traits::MD5Sum< ::elaboratoR1_B::Service > 
template<>
struct MD5Sum< ::elaboratoR1_B::ServiceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::elaboratoR1_B::Service >::value();
  }
  static const char* value(const ::elaboratoR1_B::ServiceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::elaboratoR1_B::ServiceResponse> should match 
// service_traits::DataType< ::elaboratoR1_B::Service > 
template<>
struct DataType< ::elaboratoR1_B::ServiceResponse>
{
  static const char* value()
  {
    return DataType< ::elaboratoR1_B::Service >::value();
  }
  static const char* value(const ::elaboratoR1_B::ServiceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ELABORATOR1_B_MESSAGE_SERVICE_H
